---
import '../index.css';
import '../styles/dropdown-z-index-enterprise-solution.css';
import '../styles/footer-modern.css';
import HeaderWrapper from '../components/HeaderWrapper.astro';
import FooterWrapper from '../components/FooterWrapper.astro';
import { getCredibleMarketingText, DEFAULT_COUNTS } from '../lib/utils/dynamic-counts';

export interface Props {
  title: string;
  description?: string;
  canonical?: string;
  robotsMeta?: string;
  noIndex?: boolean;
  ogImage?: string;
  keywords?: string;
}

const { 
  title, 
  description = getCredibleMarketingText(DEFAULT_COUNTS.providers, DEFAULT_COUNTS.plans).seoDescription,
  canonical = "https://choosemypower.org",
  robotsMeta = "index, follow",
  noIndex = false,
  ogImage = "/images/og-default.jpg",
  keywords
} = Astro.props;

// Ensure OG image is absolute URL for social sharing
const absoluteOgImage = ogImage.startsWith('http') ? ogImage : `https://choosemypower.org${ogImage}`;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Security headers removed - now handled by HTTP headers in netlify.toml for better CSP support -->
    
    <!-- Favicon - Lightning bolt icon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="alternate icon" type="image/svg+xml" href="/lightning-bolt-icon.svg" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    
    <title>{title}</title>
    
    <!-- Robots Meta Tag -->
    <meta name="robots" content={noIndex ? "noindex, follow" : robotsMeta} />
    
    <!-- Keywords (if provided) -->
    {keywords && <meta name="keywords" content={keywords} />}
    
    <!-- SEO Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta property="og:image" content={absoluteOgImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="ChooseMyPower.org" />
    
    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={absoluteOgImage} />
    <meta name="twitter:site" content="@choosemypower" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonical} />
    
    <!-- Additional SEO Tags -->
    <meta name="author" content="ChooseMyPower.org" />
    <meta name="theme-color" content="#2563eb" />
    
    <!-- Sitemap Reference -->
    <link rel="sitemap" type="application/xml" href="/sitemap.xml" />
    
    <!-- Optimized font loading for performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- DNS prefetch for better performance -->
    <link rel="dns-prefetch" href="//api.comparepower.com" />
    <link rel="dns-prefetch" href="//pricing.api.comparepower.com" />
    
    <!-- Inline critical font CSS to eliminate render-blocking -->
    <style>
      /* Inter Font Family - Inline for Performance */
      @font-face {
        font-family: 'Inter';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url('https://fonts.gstatic.com/s/inter/v19/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfMZg.ttf') format('truetype');
      }
      @font-face {
        font-family: 'Inter';
        font-style: normal;
        font-weight: 600;
        font-display: swap;
        src: url('https://fonts.gstatic.com/s/inter/v19/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuGKYMZg.ttf') format('truetype');
      }
      @font-face {
        font-family: 'Inter';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url('https://fonts.gstatic.com/s/inter/v19/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuFuYMZg.ttf') format('truetype');
      }
    </style>
    
    <!-- Preload critical font files for faster loading -->
    <link rel="preload" as="font" type="font/truetype" href="https://fonts.gstatic.com/s/inter/v19/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfMZg.ttf" crossorigin />
    
    <!-- Critical CSS - Inline for LCP optimization -->
    <style>
      /* Critical reset - immediate visibility */
      *,*::before,*::after{box-sizing:border-box}
      body,html{margin:0;padding:0;font-family:Inter,system-ui,sans-serif;line-height:1.5;color:#1f2937}
      
      /* Critical layout - prevent CLS */
      .container{width:100%;max-width:1200px;margin:0 auto;padding:0 1rem}
      .hero-section{min-height:60vh;display:flex;align-items:center;background:linear-gradient(135deg,#002868 0%,#1e40af 100%)}
      .hero-content{text-align:center;color:white;padding:2rem 0}
      
      /* Critical typography - LCP optimization */
      h1{font-size:clamp(2rem,5vw,3.5rem);font-weight:700;margin:0 0 1rem;line-height:1.2}
      h2{font-size:clamp(1.5rem,4vw,2.5rem);font-weight:600;margin:0 0 1rem;line-height:1.3}
      h3{font-size:1.875rem;font-weight:600;margin:0 0 1rem}
      .text-xl{font-size:1.25rem;line-height:1.75rem}
      .text-lg{font-size:1.125rem;line-height:1.75rem}
      
      /* Critical buttons - above-fold CTA */
      .btn{display:inline-flex;align-items:center;justify-content:center;padding:0.75rem 2rem;border-radius:0.5rem;font-weight:600;text-decoration:none;transition:all 0.2s ease;cursor:pointer;border:2px solid transparent}
      .btn-primary{background:#dc2626;color:white;border-color:#dc2626}
      .btn-primary:hover{background:#b91c1c;border-color:#b91c1c}
      
      /* Critical utilities - prevent CLS */
      .flex{display:flex}.grid{display:grid}.hidden{display:none}.block{display:block}.inline-block{display:inline-block}
      .items-center{align-items:center}.justify-center{justify-content:center}.text-center{text-align:center}
      .p-4{padding:1rem}.py-8{padding-top:2rem;padding-bottom:2rem}.px-4{padding-left:1rem;padding-right:1rem}
      .mb-4{margin-bottom:1rem}.mb-8{margin-bottom:2rem}.mx-auto{margin-left:auto;margin-right:auto}
      .w-full{width:100%}.max-w-4xl{max-width:56rem}.max-w-6xl{max-width:72rem}.max-w-7xl{max-width:80rem}
      .rounded-xl{border-radius:0.75rem}.shadow-lg{box-shadow:0 10px 15px -3px rgba(0,0,0,0.1)}
      .bg-white{background-color:#fff}.bg-background{background-color:#fff}.text-white{color:#fff}
      .text-foreground{color:#0f172a}.text-muted-foreground{color:#64748b}.text-card-foreground{color:#0f172a}
      
      /* Mobile-first responsive - prevent CLS on mobile */
      @media (max-width: 768px){
        .hero-section{min-height:50vh;padding:1rem 0}
        h1{font-size:2rem}
        .container{padding:0 0.75rem}
      }
      
      /* Critical form elements - ZIP code input */
      .zip-input{width:100%;max-width:300px;padding:0.75rem 1rem;border:2px solid #d1d5db;border-radius:0.5rem;font-size:1rem}
      .zip-input:focus{outline:none;border-color:#2563eb;box-shadow:0 0 0 3px rgba(37,99,235,0.1)}
      
      /* Loading states - improve perceived performance */
      .loading{opacity:0;animation:fadeIn 0.3s ease-in-out forwards}
      @keyframes fadeIn{to{opacity:1}}
      
      /* Critical layout containers to prevent CLS */
      body{font-family:inherit;color:#1f2937;background-color:#ffffff;min-height:100vh;overflow-x:hidden}
      .main-container{min-height:100vh;display:flex;flex-direction:column}
      .header{flex-shrink:0;height:65px;position:relative;z-index:99990}
      .main-content{flex:1 0 auto;min-height:calc(100vh - 65px)}
      .footer{flex-shrink:0;margin-top:auto;min-height:200px}
      
      /* Form elements - prevent CLS */
      #zipForm{min-height:72px;height:72px;display:block;width:100%}
      .zip-form-container{contain:layout style;height:72px}
    </style>
    
    <!-- Load remaining CSS asynchronously to avoid render-blocking -->
    <link rel="preload" href="/_astro/_state_.Cspq1bGy.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="/_astro/_state_.Cspq1bGy.css"></noscript>
    
    <style>
      /* Smooth scrolling behavior */
      html{scroll-behavior:smooth}
      @media (prefers-reduced-motion: reduce){html{scroll-behavior:auto}}
    </style>
    
    <!-- DNS prefetch for external resources -->
    <link rel="dns-prefetch" href="//api.comparepower.com" />
    <link rel="dns-prefetch" href="//pricing.api.comparepower.com" />
    <link rel="dns-prefetch" href="//fonts.googleapis.com" />
    <link rel="dns-prefetch" href="//fonts.gstatic.com" />
    
    <!-- CSS handled by Astro import system -->
    
    <!-- Prefetch critical API endpoints -->
    <link rel="prefetch" href="/.netlify/functions/health" />
    
    <!-- Early hints for resource optimization -->
    <meta http-equiv="Accept-CH" content="DPR, Viewport-Width, Width" />
    
    <!-- Resource timing optimization -->
    <meta name="resource-hints" content="preconnect,dns-prefetch,preload" />
  </head>
  <body>
    <!-- Skip navigation links for accessibility -->
    <a href="#main-content" class="skip-link">Skip to main content</a>
    
    <div class="main-container">
      <!-- Header Navigation -->
      <div class="header">
        <HeaderWrapper />
      </div>
      
      <!-- Main Content -->
      <div id="main-content" class="main-content">
        <slot />
      </div>
      
      <!-- Footer -->
      <div class="footer">
        <FooterWrapper />
      </div>
    </div>
    
    <!-- Service Worker disabled in development to prevent interference -->
    <!-- Will be enabled in production build -->
    <script nonce="web-vitals">
      if ('serviceWorker' in navigator && window.location.hostname !== 'localhost') {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw-core-web-vitals.js')
            .then((registration) => {
              console.log('✅ SW: Core Web Vitals Service Worker registered');
              
              // Listen for updates
              registration.addEventListener('updatefound', () => {
                console.log('🔄 SW: New service worker available');
              });
            })
            .catch((error) => {
              console.warn('❌ SW: Service Worker registration failed:', error);
            });
        });
        
        // Listen for service worker messages
        navigator.serviceWorker.addEventListener('message', (event) => {
          if (event.data && event.data.type === 'PERFORMANCE_UPDATE') {
            console.log('📊 SW: Performance update:', event.data.metrics);
          }
        });
      } else if (window.location.hostname === 'localhost') {
        console.log('🚧 SW: Service Worker disabled in development mode');
      }
    </script>
    
    <!-- Core Web Vitals Monitoring - Async Load -->
    <script nonce="web-vitals">
      // Initialize Core Web Vitals monitoring with idle callback
      function initWebVitals() {
        // Use requestIdleCallback to avoid blocking main thread
        if ('requestIdleCallback' in window) {
          requestIdleCallback(() => loadWebVitals(), { timeout: 3000 });
        } else {
          setTimeout(loadWebVitals, 1000);
        }
      }
      
      function loadWebVitals() {
        // Import Web Vitals library dynamically to avoid blocking
        import('/js/web-vitals.mjs')
          .then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
            // Track all Core Web Vitals
            getCLS((metric) => {
              console.log('📊 CLS:', metric.value);
              if (typeof gtag !== 'undefined') {
                gtag('event', 'web_vitals', {
                  event_category: 'Performance',
                  event_label: 'CLS',
                  value: Math.round(metric.value * 1000),
                  non_interaction: true
                });
              }
            });
            
            getFID((metric) => {
              console.log('📊 FID:', metric.value);
              if (typeof gtag !== 'undefined') {
                gtag('event', 'web_vitals', {
                  event_category: 'Performance',
                  event_label: 'FID',
                  value: Math.round(metric.value),
                  non_interaction: true
                });
              }
            });
            
            getFCP((metric) => {
              console.log('📊 FCP:', metric.value);
              if (typeof gtag !== 'undefined') {
                gtag('event', 'web_vitals', {
                  event_category: 'Performance',
                  event_label: 'FCP',
                  value: Math.round(metric.value),
                  non_interaction: true
                });
              }
            });
            
            getLCP((metric) => {
              console.log('📊 LCP:', metric.value);
              if (typeof gtag !== 'undefined') {
                gtag('event', 'web_vitals', {
                  event_category: 'Performance',
                  event_label: 'LCP',
                  value: Math.round(metric.value),
                  non_interaction: true
                });
              }
            });
            
            getTTFB((metric) => {
              console.log('📊 TTFB:', metric.value);
              if (typeof gtag !== 'undefined') {
                gtag('event', 'web_vitals', {
                  event_category: 'Performance',
                  event_label: 'TTFB',
                  value: Math.round(metric.value),
                  non_interaction: true
                });
              }
            });
          })
          .catch((error) => {
            console.warn('Web Vitals monitoring failed to load:', error);
          });
      }
      
      // Initialize on load
      window.addEventListener('load', initWebVitals);
      
      // Performance optimization helpers
      window.performanceHelpers = {
        // Preload important pages
        preloadPage: (url) => {
          if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {
            const messageChannel = new MessageChannel();
            navigator.serviceWorker.controller.postMessage({
              type: 'PREFETCH_PAGES',
              pages: [url]
            }, [messageChannel.port2]);
          }
        },
        
        // Get performance metrics
        getMetrics: () => {
          if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {
            const messageChannel = new MessageChannel();
            navigator.serviceWorker.controller.postMessage({
              type: 'GET_METRICS'
            }, [messageChannel.port2]);
            
            return new Promise((resolve) => {
              messageChannel.port1.onmessage = (event) => {
                if (event.data.type === 'METRICS_RESPONSE') {
                  resolve(event.data.data);
                }
              };
            });
          }
          return Promise.resolve(null);
        }
      };
    </script>
    
    <style>
      .skip-link {
        position: absolute;
        top: -40px;
        left: 6px;
        background: #000;
        color: #fff;
        padding: 8px;
        text-decoration: none;
        border-radius: 0 0 4px 4px;
        z-index: 9999;
        font-size: 14px;
        opacity: 0;
        transition: opacity 0.2s, top 0.2s;
      }
      
      .skip-link:focus {
        top: 0;
        opacity: 1;
      }
    </style>
  </body>
</html>