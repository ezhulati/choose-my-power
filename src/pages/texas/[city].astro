---
/**
 * Unified City Page with Faceted Design System
 * Updated to use same components and design as faceted pages
 * Maintains backward compatibility while providing modern UX
 */

import Layout from '../../layouts/Layout.astro';
import HeroBackground from '../../components/HeroBackground.astro';
import FacetedPlanGrid from '../../components/faceted/FacetedPlanGrid.astro';
import StandardZipInput from '../../components/StandardZipInput.astro';
import { facetedRouter } from '../../lib/faceted/faceted-router';
import { filterMapper } from '../../lib/api/filter-mapper';
import { generateFacetedMeta } from '../../lib/seo/meta-generator-scale';
import { generateFacetedSchema } from '../../lib/seo/schema-scale';
import { getHeroImage, extractContextFromPath } from '../../lib/images/hero-image-mapper';
import { tdspMapping, municipalUtilities, formatCityName, validateCitySlug, getTdspFromCity, formatCitySlug } from '../../config/tdsp-mapping';
import { comparePowerClient } from '../../lib/api/comparepower-client';
import type { Plan } from '../../types/facets';
import EnhancedSection from '../../components/ui/EnhancedSection.astro';
import EnhancedCard from '../../components/ui/EnhancedCard.astro';
import EnhancedList from '../../components/ui/EnhancedList.astro';
import AccentBox from '../../components/ui/AccentBox.astro';

export const prerender = false;

export async function getStaticPaths() {
  // Generate static paths for all cities in the TDSP mapping
  return Object.keys(tdspMapping).map(citySlug => ({
    params: { city: citySlug }
  }));
}

const { city } = Astro.params;

console.log(`🏙️  City page requested: ${city}`);

// Redirect URLs with -tx suffix to clean URLs (for development and production consistency)
if (city && city.endsWith('-tx')) {
  const cleanCity = city.replace(/-tx$/, '');
  console.log(`🔄 Redirecting from ${city} to ${cleanCity}`);
  return Astro.redirect(`/texas/${cleanCity}`, 301);
}

// Clean city slug (no -tx suffix needed)
const citySlug = formatCitySlug(city || '');

// Validate city exists using clean city names
if (!city || !validateCitySlug(citySlug)) {
  console.error(`Invalid city: ${city} (cleaned as: ${citySlug})`);
  return Astro.redirect('/404', 404);
}

const tdspDuns = getTdspFromCity(citySlug);
const cityName = formatCityName(citySlug);
const tdspInfo = tdspMapping[citySlug];

if (!tdspDuns || !tdspInfo) {
  console.error(`No TDSP mapping found for city: ${city}`);
  return Astro.redirect('/404', 404);
}

// Check if this is a municipal utility city and redirect appropriately
if (tdspInfo.municipal && municipalUtilities[citySlug]) {
  console.log(`🏛️  Municipal utility detected for ${cityName}, redirecting to municipal utility page`);
  return Astro.redirect(`/texas/${citySlug}/municipal-utility`, 302);
}

// Static city pages don't handle URL parameters - they redirect to faceted URLs
// This is a design choice for better SEO and consistent user experience
const view = 'grid';

// Static pages always point to faceted URLs as canonical
const hasLegacyParams = false;
const suggestedCanonicalUrl = null;

// Use faceted system for consistency - no filters for base city page
const filterSegments: string[] = [];
const appliedFilters: any[] = [];

// Fetch plans using the same system as faceted pages
let plans: Plan[] = [];
let apiError: string | null = null;

try {
  console.log(`Fetching plans for ${cityName} (DUNS: ${tdspDuns})`);
  
  // Use standard API params for city overview
  const apiParams = {
    tdsp_duns: tdspDuns,
    display_usage: 1000 // Standard 1000 kWh usage
  };
  
  // Prefer DB-first path for lower latency and fewer API calls
  plans = await comparePowerClient.getPlansWithCache(apiParams);
  
  console.log(`✅ Successfully fetched ${plans.length} plans for ${cityName}`);
} catch (error) {
  console.error(`❌ Error fetching plans for ${cityName}:`, error);
  apiError = error instanceof Error ? error.message : 'Unable to load plans at this time';
}

// Generate SEO metadata using the same system as faceted pages
const currentUrl = `/texas/${city}`;
const canonicalUrl = suggestedCanonicalUrl || `/electricity-plans/${city}`; // Point to faceted URL as canonical
const lowestRate = plans.length > 0 ? Math.min(...plans.map(p => parseFloat(p.rate) || 999)) : 0;
const cityTier = tdspInfo.tier || 3;

// Generate meta using the same system as faceted pages
const metaTags = await generateFacetedMeta({
  city: cityName,
  filters: appliedFilters,
  planCount: plans.length,
  lowestRate,
  location: cityName,
  cityTier,
  isStatic: false
});

// Generate structured data using the same system
const breadcrumbs = [
  { name: 'Home', url: '/' },
  { name: 'Texas', url: '/texas' },
  { name: cityName.replace(', TX', ''), url: `/texas/${city}` }
];

const schemas = generateFacetedSchema({
  city: cityName,
  filters: appliedFilters,
  plans,
  meta: metaTags,
  tdspInfo: { name: tdspInfo.name, duns: tdspDuns },
  url: currentUrl,
  planCount: plans.length,
  lowestRate
});

// Use professional messaging for title and description
const pageTitle = `${cityName} Electricity Rates & Plans - Compare Top Providers | ChooseMyPower`;
const pageDescription = `Compare electricity rates and plans in ${cityName}, Texas. ${plans.length} licensed providers offering transparent pricing with no hidden fees. Find the perfect plan for your home and save money on your energy bills.`;

// Get suggested filters using faceted system
const suggestedFilters = facetedRouter.getSuggestedFiltersSync(citySlug, filterSegments, 6);
const suggestedFilterDefinitions = suggestedFilters.map(pattern => ({
  pattern,
  definition: filterMapper.getDefinitionByPattern(pattern)
})).filter(item => item.definition);

// Get contextual hero image
const heroContext = extractContextFromPath(currentUrl);
const heroImage = getHeroImage({
  pageType: 'city',
  location: city,
  filters: filterSegments
});
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  canonical={canonicalUrl}
  ogImage={metaTags.ogImage}
>
  <!-- Schema.org structured data -->
  <script type="application/ld+json" set:html={JSON.stringify(schemas)} />
  
  <!-- Additional meta tags for consistency with faceted pages -->
  <meta property="og:title" content={pageTitle} />
  <meta property="og:description" content={pageDescription} />
  <meta property="og:url" content={canonicalUrl} />
  <meta property="og:type" content="website" />
  
  <!-- City-specific meta -->
  <meta name="geo.region" content="TX" />
  <meta name="geo.placename" content={cityName} />
  
  <main class="min-h-screen bg-gray-50">
    <!-- Professional Hero Section -->
    <HeroBackground 
      imageUrl={heroImage} 
      overlayOpacity={0.85}
    >
      <section class="text-white flex items-center justify-center min-h-[50vh] lg:min-h-[55vh]">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 lg:py-20">
          <!-- Breadcrumb Navigation -->
          <nav class="mb-12" aria-label="Breadcrumb">
            <div class="flex items-center space-x-3 text-sm">
              {breadcrumbs.map((breadcrumb, index) => (
                <Fragment key={breadcrumb.url}>
                  {index > 0 && <span class="text-white/50 mx-2">→</span>}
                  <a 
                    href={breadcrumb.url}
                    class={index === breadcrumbs.length - 1 
                      ? "text-white font-semibold drop-shadow-sm" 
                      : "text-white/80 hover:text-white transition-all duration-200 drop-shadow-sm hover:underline"
                    }
                  >
                    {breadcrumb.name}
                  </a>
                </Fragment>
              ))}
            </div>
          </nav>

          <!-- Professional Page Header -->
          <div class="text-center max-w-5xl mx-auto">
            <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-8 drop-shadow-lg leading-tight">
              {cityName.replace(', TX', '')} Electricity Plans
            </h1>
            <p class="text-xl lg:text-2xl text-white/95 mb-8 drop-shadow-md leading-relaxed">
              Compare electricity rates and find the perfect plan for your {cityName.replace(', TX', '')} home. Licensed providers, transparent pricing, no hidden fees.
            </p>
            <div class="inline-flex items-center px-6 py-3 bg-white/10 backdrop-blur-sm rounded-lg border border-white/20">
              <svg class="w-5 h-5 text-texas-gold mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span class="text-lg font-semibold">{plans.length} Plans Available</span>
              {apiError && (
                <span class="ml-3 text-texas-gold-200">• Loading...</span>
              )}
            </div>
          </div>
        </div>
      </section>
    </HeroBackground>

    <!-- Status Messages Container -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <!-- Legacy Parameter Notice -->
      {hasLegacyParams && suggestedCanonicalUrl && (
        <div class="bg-gradient-to-r from-texas-cream to-texas-cream/50 border border-texas-navy/30 rounded-xl p-6 mb-6 shadow-sm">
          <div class="flex items-start">
            <div class="flex-shrink-0 mt-1">
              <svg class="h-6 w-6 text-texas-navy" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-4 flex-1">
              <h3 class="text-base font-semibold text-texas-navy mb-2">
                Filter Applied
              </h3>
              <p class="text-sm text-texas-navy/80 mb-4 leading-relaxed">
                You've applied filters to your search. For the most up-to-date results, visit our enhanced filter page.
              </p>
              <a 
                href={suggestedCanonicalUrl} 
                class="inline-flex items-center px-4 py-2 bg-texas-navy text-white text-sm font-medium rounded-lg hover:bg-blue-800 transition-colors duration-200"
              >
                View Filtered Results
                <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          </div>
        </div>
      )}

      <!-- Error Handling -->
      {apiError && (
        <div class="bg-gradient-to-r from-red-50 to-red-25 border border-red-200 rounded-xl p-6 mb-6 shadow-sm">
          <div class="flex items-start">
            <div class="flex-shrink-0 mt-1">
              <svg class="h-6 w-6 text-red-500" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-4 flex-1">
              <h3 class="text-base font-semibold text-red-800 mb-2">
                Unable to Load Electricity Plans
              </h3>
              <p class="text-sm text-red-700 mb-4 leading-relaxed">
                We're experiencing technical difficulties loading plans for {cityName}. Please try again in a few moments or contact our support team.
              </p>
              <div class="flex flex-col sm:flex-row gap-3">
                <button 
                  onclick="location.reload()" 
                  class="inline-flex items-center px-4 py-2 bg-red-600 text-white text-sm font-medium rounded-lg hover:bg-red-700 transition-colors duration-200"
                >
                  Try Again
                  <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                  </svg>
                </button>
                <a 
                  href="/resources/support/contact" 
                  class="inline-flex items-center px-4 py-2 bg-white border border-red-300 text-red-700 text-sm font-medium rounded-lg hover:bg-red-50 transition-colors duration-200"
                >
                  Contact Support
                </a>
              </div>
              {apiError && (
                <details class="mt-4">
                  <summary class="text-xs text-red-600 cursor-pointer hover:text-red-800">
                    Technical Details
                  </summary>
                  <p class="mt-2 text-xs text-red-600 font-mono bg-red-100 p-2 rounded border">{apiError}</p>
                </details>
              )}
            </div>
          </div>
        </div>
      )}
    </div>

    <!-- Professional Main Content Layout -->
    <EnhancedSection background="white" padding="xl">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-12 lg:gap-16">
          <!-- Professional Sidebar -->
          <div class="lg:col-span-1 space-y-8">
            <!-- ZIP Lookup Section -->
            <div class="bg-white border border-gray-200 rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300">
              <div class="flex items-center mb-6">
                <div class="w-10 h-10 bg-texas-navy/10 rounded-lg flex items-center justify-center mr-4">
                  <svg class="w-5 h-5 text-texas-navy" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                  </svg>
                </div>
                <h3 class="text-xl font-bold text-texas-navy">Search Another Area</h3>
              </div>
              <p class="text-gray-600 mb-6 leading-relaxed">Find electricity plans for any Texas city or ZIP code.</p>
              <StandardZipInput 
                size="sm"
                variant="compact"
                showTitle={false}
                showDescription={false}
                customClass="w-full"
              />
            </div>
            
            <!-- Filter Suggestions -->
            <div class="bg-gradient-to-br from-texas-cream/30 to-white border border-gray-200 rounded-2xl p-8 shadow-lg">
              <div class="flex items-center mb-6">
                <div class="w-10 h-10 bg-texas-gold/10 rounded-lg flex items-center justify-center mr-4">
                  <svg class="w-5 h-5 text-texas-gold" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
                  </svg>
                </div>
                <h3 class="text-xl font-bold text-texas-navy">Refine Your Search</h3>
              </div>
              <p class="text-gray-600 mb-8 leading-relaxed">Narrow down plans by your specific needs and preferences.</p>
              <div class="space-y-8">
                {suggestedFilterDefinitions.map((item) => (
                  <div key={item.definition.type}>
                    <h4 class="text-lg font-semibold text-texas-navy mb-4">
                      {item.definition.description}
                    </h4>
                    <div class="grid grid-cols-1 gap-2">
                      {item.definition.urlPatterns.slice(0, item.definition.type === 'providers' ? 8 : 4).map((pattern) => {
                        const newUrl = `/electricity-plans/${city}/${pattern}`;
                        
                        return (
                          <a
                            key={pattern}
                            href={newUrl}
                            class="group block px-4 py-3 rounded-xl transition-all duration-200 text-gray-700 hover:bg-texas-navy hover:text-white font-medium bg-white border border-gray-200 hover:border-texas-navy hover:shadow-md"
                          >
                            <span class="flex items-center justify-between">
                              {item.definition.displayName(pattern)}
                              <svg class="w-4 h-4 opacity-0 group-hover:opacity-100 transition-opacity" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                              </svg>
                            </span>
                          </a>
                        );
                      })}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          <!-- Professional Plans Grid -->
          <div class="lg:col-span-3">
            <div class="bg-white border border-gray-200 rounded-2xl shadow-xl overflow-hidden">
              <!-- Plans Header -->
              <div class="bg-gradient-to-r from-texas-navy to-blue-800 p-8">
                <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between">
                  <div class="text-white mb-4 lg:mb-0">
                    <h2 class="text-3xl font-bold mb-3">
                      Electricity Plans for {cityName.replace(', TX', '')}
                    </h2>
                    <div class="flex items-center space-x-6 text-white/90">
                      <span class="flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        Licensed Providers
                      </span>
                      <span class="flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                        </svg>
                        Real Rates
                      </span>
                      <span class="flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        No Hidden Fees
                      </span>
                    </div>
                  </div>
                  {plans.length > 0 && (
                    <div class="inline-flex items-center px-6 py-3 bg-texas-gold text-white font-bold rounded-xl shadow-lg">
                      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                      </svg>
                      {plans.length} Plans Available
                    </div>
                  )}
                </div>
              </div>
              
              <!-- Plans Grid Content -->
              <div class="bg-gray-50">
                <FacetedPlanGrid 
                  plans={plans}
                  city={cityName}
                  appliedFilters={appliedFilters}
                  totalCount={plans.length}
                  loading={false}
                  error={apiError}
                  className="enterprise-grid"
                  viewMode={view as 'grid' | 'table' | 'compact'}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </EnhancedSection>

    <!-- Professional Plan Categories Section -->
    <EnhancedSection background="cream" padding="xl">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-20">
          <h2 class="text-4xl md:text-5xl font-bold text-texas-navy mb-8 leading-tight">
            Popular Plan Options in {cityName.replace(', TX', '')}
          </h2>
          <p class="text-xl text-gray-700 max-w-3xl mx-auto leading-relaxed">
            Explore specialized electricity plans tailored to your specific needs and preferences. Each category is designed to help you find the perfect match for your lifestyle and budget.
          </p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-20">
          {['12-month', '24-month', 'fixed-rate', 'green-energy', 'prepaid', 'no-deposit'].map((filter) => {
            const newUrl = `/electricity-plans/${city}/${filter}`;
            const definition = filterMapper.getDefinitionByPattern(filter);
            const displayName = definition?.displayName(filter) || filter.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
            
            const icons = {
              '12-month': 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z',
              '24-month': 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z',
              'fixed-rate': 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 01-2-2z',
              'green-energy': 'M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z',
              'prepaid': 'M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z',
              'no-deposit': 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'
            };
            
            return (
              <a
                key={filter}
                href={newUrl}
                class="group bg-white p-8 rounded-2xl shadow-lg hover:shadow-2xl border-2 border-gray-200 hover:border-texas-gold transition-all duration-300 hover:-translate-y-3 text-left"
              >
                <div class="flex items-start mb-6">
                  <div class="w-14 h-14 bg-gradient-to-br from-texas-navy/10 to-texas-gold/10 rounded-xl flex items-center justify-center mr-6 group-hover:from-texas-gold/20 group-hover:to-texas-navy/20 transition-all duration-300">
                    <svg class="w-7 h-7 text-texas-navy group-hover:text-texas-gold transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons[filter] || "M13 10V3L4 14h7v7l9-11h-7z"}></path>
                    </svg>
                  </div>
                  <div class="flex-1">
                    <h3 class="text-xl font-bold text-texas-navy group-hover:text-texas-gold transition-colors duration-300 mb-3">
                      {displayName}
                    </h3>
                    <p class="text-gray-600 leading-relaxed mb-4">
                      Available in {cityName.replace(', TX', '')}
                    </p>
                    <div class="flex items-center text-texas-navy group-hover:text-texas-gold transition-colors duration-300 font-medium">
                      <span>Explore plans</span>
                      <svg class="ml-2 w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                      </svg>
                    </div>
                  </div>
                </div>
              </a>
            );
          })}
        </div>
        
        <!-- Professional CTA Section -->
        <div class="bg-gradient-to-r from-texas-navy to-blue-800 rounded-3xl p-12 text-center text-white shadow-2xl">
          <div class="max-w-4xl mx-auto">
            <div class="flex items-center justify-center mb-6">
              <div class="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center mr-6">
                <svg class="w-8 h-8 text-texas-gold" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <h3 class="text-3xl font-bold">
                Need Help Choosing the Right Plan?
              </h3>
            </div>
            <p class="text-xl text-white/90 mb-10 max-w-3xl mx-auto leading-relaxed">
              Texas electricity can be complicated. Get personalized recommendations based on your home size, usage patterns, and budget from our energy experts.
            </p>
            <div class="flex flex-col sm:flex-row gap-6 justify-center">
              <a 
                href="/resources/guides/choosing-a-provider" 
                class="inline-flex items-center px-8 py-4 bg-texas-red text-white font-bold rounded-xl hover:bg-texas-red-600 transition-all duration-300 transform hover:scale-105 shadow-lg"
              >
                <svg class="mr-3 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                </svg>
                Get Expert Guidance
              </a>
              <a 
                href="/electricity-plans" 
                class="inline-flex items-center px-8 py-4 bg-white text-texas-navy font-bold rounded-xl hover:bg-gray-100 transition-all duration-300 transform hover:scale-105 shadow-lg"
              >
                <svg class="mr-3 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
                Compare All Plans
              </a>
            </div>
          </div>
        </div>
      </div>
    </EnhancedSection>
  </main>
</Layout>

<style>
  /* Professional Enterprise Styling */
  .enterprise-grid {
    background: linear-gradient(135deg, #f9fafb 0%, #ffffff 100%);
  }
  
  /* Enhanced hover states for professional feel */
  .enterprise-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
  }
  
  /* Professional button animations */
  .professional-btn {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }
  
  .professional-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
  }
  
  .professional-btn:hover::before {
    left: 100%;
  }
  
  /* Texas-themed gradient overlays */
  .texas-gradient-overlay {
    background: linear-gradient(135deg, rgba(0, 40, 104, 0.95) 0%, rgba(220, 38, 38, 0.8) 100%);
  }
  
  /* Professional section spacing */
  .enterprise-section {
    padding-top: clamp(4rem, 8vw, 8rem);
    padding-bottom: clamp(4rem, 8vw, 8rem);
  }
  
  /* Consistent card shadows */
  .professional-shadow {
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  .professional-shadow-lg {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 25px 15px -5px rgba(0, 0, 0, 0.04);
  }
  
  /* Ensure consistent typography hierarchy */
  .enterprise-typography h1 {
    letter-spacing: -0.025em;
    line-height: 1.1;
  }
  
  .enterprise-typography h2 {
    letter-spacing: -0.02em;
    line-height: 1.2;
  }
  
  .enterprise-typography h3 {
    letter-spacing: -0.015em;
    line-height: 1.3;
  }
  
  /* Professional mobile responsiveness */
  @media (max-width: 768px) {
    .enterprise-section {
      padding-top: 3rem;
      padding-bottom: 3rem;
    }
  }
</style>
