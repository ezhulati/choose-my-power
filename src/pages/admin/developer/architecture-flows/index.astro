---
import Layout from '../../../../layouts/Layout.astro';
import { isAdminEnabled } from '../../../../lib/utils/admin-guard';

const title = 'Developer: Architecture Flows';
const description = 'Sequence diagrams and quick code references for plan fetching, faceted routing, and ZIP resolution.';
---

{!isAdminEnabled() ? Astro.redirect('/404', 404) : null}

<Layout title={title} description={description} noIndex={true}>
  <main class="min-h-screen bg-gray-50 py-10">
    <div class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
      <h1 class="text-3xl font-bold text-texas-navy mb-6">Architecture Flow Diagrams</h1>
      <p class="text-gray-700 mb-8">This developer page summarizes runtime flows with compact sequence diagrams and direct code references for debugging. Safe to share internally; marked noindex.</p>

      <section class="mb-10">
        <h2 class="text-2xl font-semibold text-texas-navy mb-3">Plan Fetching & Caching</h2>
        <div class="rounded-lg border bg-white p-4 shadow-sm">
          <pre class="overflow-x-auto text-sm"><code>sequenceDiagram
participant Page/Route
participant ComparePowerClient
participant RedisCache
participant PlanRepository (DB)
participant ComparePower API

Note over Page/Route: Prefer DB-first path
Page/Route-&gt;&gt;ComparePowerClient: getPlansWithCache(params)
ComparePowerClient-&gt;&gt;PlanRepository (DB): getPlansFromCache(params)
alt Fresh DB cache exists
  PlanRepository (DB)--&gt;&gt;ComparePowerClient: plans
  ComparePowerClient--&gt;&gt;Page/Route: plans
else No DB cache
  ComparePowerClient-&gt;&gt;PlanRepository (DB): getActivePlans(tdsp, filters?)
  alt Active plans exist
    PlanRepository (DB)--&gt;&gt;ComparePowerClient: active plans
    ComparePowerClient-&gt;&gt;PlanRepository (DB): setPlansCache(ttl=30m)
    ComparePowerClient--&gt;&gt;Page/Route: plans
  else No active plans
    Note over ComparePowerClient: Fallback to fetchPlans()
    ComparePowerClient-&gt;&gt;RedisCache: get(params)
    alt Redis hit
      RedisCache--&gt;&gt;ComparePowerClient: plans
      ComparePowerClient--&gt;&gt;Page/Route: plans
    else Miss
      ComparePowerClient-&gt;&gt;PlanRepository (DB): getPlansFromCache(params)
      alt DB cache hit
        PlanRepository (DB)--&gt;&gt;ComparePowerClient: plans
        ComparePowerClient--&gt;&gt;Page/Route: plans
      else Miss
        ComparePowerClient-&gt;&gt;ComparePower API: GET /api/plans/current?... (retry/backoff)
        ComparePower API--&gt;&gt;ComparePowerClient: raw plans[]
        ComparePowerClient-&gt;&gt;ComparePowerClient: clean + validate + transform
        ComparePowerClient-&gt;&gt;RedisCache: set(params, plans)
        ComparePowerClient-&gt;&gt;PlanRepository (DB): setPlansCache(ttl=1h)
        ComparePowerClient-&gt;&gt;PlanRepository (DB): storePlans(raw)
        ComparePowerClient--&gt;&gt;Page/Route: plans
      end
    end
  end
end</code></pre>
          <div class="mt-4 text-sm text-gray-700">
            <p class="mb-1"><strong>Code:</strong></p>
            <ul class="list-disc ml-5">
              <li><code>src/lib/api/comparepower-client.ts:196</code> fetchPlans entry</li>
              <li><code>src/lib/api/comparepower-client.ts:260</code> getPlansWithCache</li>
              <li><code>src/lib/api/comparepower-client.ts:557</code> makeRequestWithRetry</li>
              <li><code>src/lib/api/comparepower-client.ts:377</code> cleanPlanData</li>
              <li><code>src/lib/database/plan-repository.ts:93</code> DB cache</li>
              <li><code>src/lib/database/plan-repository.ts:266</code> getActivePlans</li>
            </ul>
          </div>
        </div>
      </section>

      <section class="mb-10">
        <h2 class="text-2xl font-semibold text-texas-navy mb-3">Faceted URL → API Mapping</h2>
        <div class="rounded-lg border bg-white p-4 shadow-sm">
          <pre class="overflow-x-auto text-sm"><code>sequenceDiagram
participant User
participant FacetedRouter
participant FilterMapper
participant ComparePowerClient
participant Astro Page

User-&gt;&gt;Astro Page: GET /electricity-plans/:city/[:filters]
Astro Page-&gt;&gt;FacetedRouter: validateRoute(path, requirePlans)
FacetedRouter-&gt;&gt;FacetedRouter: parse city + filters
FacetedRouter-&gt;&gt;FacetedRouter: validate city → TDSP DUNS
FacetedRouter-&gt;&gt;FilterMapper: mapFiltersToApiParams(city, filters, duns)
FilterMapper--&gt;&gt;FacetedRouter: isValid, apiParams, appliedFilters
FacetedRouter-&gt;&gt;FacetedRouter: canonical URL (+shouldIndex)
alt requirePlans and isValid
  FacetedRouter-&gt;&gt;ComparePowerClient: fetchPlans(apiParams)
  ComparePowerClient--&gt;&gt;FacetedRouter: plans
end
alt invalid
  FacetedRouter--&gt;&gt;Astro Page: redirectUrl or 404
  Astro Page--&gt;&gt;User: Redirect or 404
else valid
  FacetedRouter--&gt;&gt;Astro Page: routeResult (canonical, shouldIndex, plans?)
  Astro Page--&gt;&gt;User: Render page
end</code></pre>
          <div class="mt-4 text-sm text-gray-700">
            <p class="mb-1"><strong>Code:</strong></p>
            <ul class="list-disc ml-5">
              <li><code>src/lib/faceted/faceted-router.ts:56</code> validateRoute</li>
              <li><code>src/lib/faceted/faceted-router.ts:203</code> canonical URL</li>
              <li><code>src/lib/faceted/faceted-router.ts:233</code> shouldIndex</li>
              <li><code>src/pages/electricity-plans/[...path].astro:38</code> SSR handler</li>
            </ul>
          </div>
        </div>
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold text-texas-navy mb-3">ZIP Resolution (Form → City)</h2>
        <div class="rounded-lg border bg-white p-4 shadow-sm">
          <pre class="overflow-x-auto text-sm"><code>sequenceDiagram
participant User
participant Browser JS
participant Astro ZIP API
participant City Page

User-&gt;&gt;Browser JS: Submit ZIP form
Browser JS-&gt;&gt;Astro ZIP API: GET /api/zip-lookup?zip=75201 (AJAX)
alt Municipal ZIP
  Astro ZIP API--&gt;&gt;Browser JS: success:false, redirectUrl:/texas/:city/municipal-utility
  Browser JS-&gt;&gt;User: Navigate to municipal page
else Deregulated ZIP
  Astro ZIP API--&gt;&gt;Browser JS: success:true, redirectUrl:/texas/:city
  Browser JS-&gt;&gt;User: Navigate to /texas/:city
  User-&gt;&gt;City Page: GET /texas/:city
  City Page-&gt;&gt;ComparePowerClient: fetchPlans(tdsp_duns, usage=1000)
  ComparePowerClient--&gt;&gt;City Page: plans
  City Page--&gt;&gt;User: Render city overview
end</code></pre>
          <div class="mt-4 text-sm text-gray-700">
            <p class="mb-1"><strong>Code:</strong></p>
            <ul class="list-disc ml-5">
              <li><code>public/js/zip-lookup.js:169</code> AJAX call &amp; navigation</li>
              <li><code>src/components/StandardZipInput.astro:150</code> script include</li>
              <li><code>src/pages/api/zip-lookup.ts:35</code> API handler</li>
              <li><code>src/pages/texas/[city].astro:21</code> city SSR</li>
            </ul>
          </div>
        </div>
      </section>

      <div class="text-sm text-gray-600">
        <p><strong>Notes:</strong> Diagrams render as code blocks for reliability under CSP. They can be exported from the <code>docs/developer/diagrams/*.mmd</code> files with Mermaid CLI if needed.</p>
      </div>
    </div>
  </main>
</Layout>
