# Security Headers Configuration for ChooseMyPower.org
# Enterprise-grade security hardening

# Security headers that apply to all responses
add_header X-Frame-Options "DENY" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header X-Permitted-Cross-Domain-Policies "none" always;
add_header X-Download-Options "noopen" always;

# Content Security Policy (CSP)
# Adjusted for ChooseMyPower.org requirements
map $uri $csp_policy {
    default "default-src 'self'; 
             script-src 'self' 'unsafe-inline' 'unsafe-eval' 
                       https://www.googletagmanager.com 
                       https://www.google-analytics.com 
                       https://js.stripe.com 
                       https://maps.googleapis.com; 
             style-src 'self' 'unsafe-inline' 
                      https://fonts.googleapis.com 
                      https://cdn.jsdelivr.net; 
             font-src 'self' 
                     https://fonts.gstatic.com 
                     data:; 
             img-src 'self' 
                    data: 
                    https: 
                    blob:; 
             connect-src 'self' 
                        https://api.comparepower.com 
                        https://www.google-analytics.com 
                        https://vitals.vercel-insights.com 
                        wss:; 
             frame-src 'none'; 
             object-src 'none'; 
             base-uri 'self'; 
             form-action 'self'; 
             manifest-src 'self'; 
             worker-src 'self';";
    
    ~*/admin/ "default-src 'self'; 
              script-src 'self' 'unsafe-inline'; 
              style-src 'self' 'unsafe-inline'; 
              font-src 'self'; 
              img-src 'self' data:; 
              connect-src 'self'; 
              frame-ancestors 'none';";
}

add_header Content-Security-Policy $csp_policy always;

# Permissions Policy (Feature Policy replacement)
add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(self), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=()" always;

# HSTS (HTTP Strict Transport Security)
# Only add HSTS header if HTTPS is being used
map $scheme $hsts_header {
    https "max-age=31536000; includeSubDomains; preload";
}
add_header Strict-Transport-Security $hsts_header always;

# Remove server information
more_clear_headers 'Server';
more_clear_headers 'X-Powered-By';

# Expect-CT header (for certificate transparency)
add_header Expect-CT "max-age=86400, enforce" always;

# Cross-Origin Resource Sharing (CORS) configuration
map $request_method $cors_method {
    OPTIONS 11;
    GET 1;
    POST 1;
    default 0;
}

map $cors_method $cors_origin {
    11 $http_origin;
    1 $http_origin;
    default "";
}

map $cors_method $cors_cred {
    11 true;
    1 true;
    default "";
}

map $cors_method $cors_header {
    11 "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization";
    1 "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization";
    default "";
}

map $cors_method $cors_method_header {
    11 "GET, POST, OPTIONS";
    default "";
}

# Apply CORS headers conditionally
add_header Access-Control-Allow-Origin $cors_origin always;
add_header Access-Control-Allow-Credentials $cors_cred;
add_header Access-Control-Allow-Headers $cors_header;
add_header Access-Control-Allow-Methods $cors_method_header;

# Handle preflight requests
if ($request_method = 'OPTIONS') {
    add_header Access-Control-Max-Age 1728000;
    add_header Content-Type 'text/plain; charset=utf-8';
    add_header Content-Length 0;
    return 204;
}

# Additional security measures for sensitive endpoints
location /api/ {
    # Additional CSP for API endpoints
    add_header Content-Security-Policy "default-src 'none'; connect-src 'self'" always;
    
    # Rate limiting
    limit_req zone=api burst=10 nodelay;
    
    # Only allow specific methods
    limit_except GET POST {
        deny all;
    }
    
    # Additional security headers for API
    add_header X-API-Version "1.0" always;
    add_header Cache-Control "no-store, no-cache, must-revalidate" always;
}

# Admin area security
location /admin/ {
    # Restrict access to admin area
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    
    # Stronger CSP for admin
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';" always;
    
    # No caching for admin pages
    add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# Block common vulnerability scanners
map $http_user_agent $blocked_agent {
    default 0;
    "~*nikto" 1;
    "~*sqlmap" 1;
    "~*nmap" 1;
    "~*w3af" 1;
    "~*masscan" 1;
    "~*netsparker" 1;
    "~*acunetix" 1;
}

if ($blocked_agent) {
    return 444;
}

# Block requests with suspicious patterns
location ~* /(wp-admin|wp-content|wp-includes|wp-config|xmlrpc\.php|phpmyadmin|admin\.php|config\.php) {
    return 444;
}

# Block SQL injection attempts
if ($args ~* "(union|select|insert|delete|update|drop|create|alter)" ) {
    return 444;
}

# Block XSS attempts
if ($args ~* "(<|>|'|\"|;|\)|javascript:|script)" ) {
    return 444;
}

# Block file inclusion attempts
if ($args ~* "\.\./") {
    return 444;
}

# Hide sensitive files
location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
    deny all;
}

# Block access to hidden files
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}