# Cache Optimization Configuration for ChooseMyPower.org
# Optimized for Core Web Vitals and scalable performance

# Proxy cache configuration
proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=STATIC:100m inactive=7d max_size=10g;
proxy_cache_path /var/cache/nginx/api_cache levels=1:2 keys_zone=API:50m inactive=1h max_size=1g;
proxy_cache_path /var/cache/nginx/city_cache levels=1:2 keys_zone=CITY:200m inactive=24h max_size=5g;

# FastCGI cache (if using PHP/dynamic content)
fastcgi_cache_path /var/cache/nginx/fastcgi_cache levels=1:2 keys_zone=FASTCGI:100m inactive=60m max_size=1g;

# Cache zone for rate limiting
limit_req_zone $binary_remote_addr zone=cache_zone:10m rate=30r/s;

# Microcache for dynamic content
proxy_cache_path /var/cache/nginx/microcache levels=1:2 keys_zone=MICRO:10m inactive=60s max_size=100m;

# Cache key configuration
proxy_cache_key "$scheme$request_method$host$request_uri";

# Cache lock to prevent cache stampede
proxy_cache_lock on;
proxy_cache_lock_timeout 5s;
proxy_cache_lock_age 1s;

# Cache bypass conditions
map $request_method $bypass_cache {
    default 0;
    POST 1;
    PUT 1;
    DELETE 1;
    PATCH 1;
}

map $http_cookie $bypass_cache {
    default 0;
    "~SESS" 1;
    "~wordpress_logged_in" 1;
    "~comment_author" 1;
}

# Cache control headers
map $sent_http_content_type $expires {
    default                    off;
    text/html                  1h;
    text/css                   max;
    application/javascript     max;
    application/json          30m;
    ~image/                    max;
    ~font/                     max;
    application/pdf           1M;
    ~video/                   1M;
}

expires $expires;

# Browser caching directives
location ~* \.(css|js)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary "Accept-Encoding";
    
    # Gzip pre-compressed files
    location ~* \.css\.gz$ {
        gzip off;
        add_header Content-Encoding gzip;
        add_header Content-Type text/css;
    }
    
    location ~* \.js\.gz$ {
        gzip off;
        add_header Content-Encoding gzip;
        add_header Content-Type application/javascript;
    }
}

# Image caching with WebP/AVIF support
location ~* \.(png|jpg|jpeg|gif|webp|avif|svg|ico)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary "Accept-Encoding";
    
    # Try WebP/AVIF versions first if browser supports
    location ~* \.(png|jpg|jpeg)$ {
        add_header Vary "Accept";
        try_files $uri.webp $uri.avif $uri =404;
    }
}

# Font caching
location ~* \.(woff2|woff|ttf|eot|otf)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, OPTIONS";
    add_header Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization";
}

# HTML caching (with validation)
location ~* \.html$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    add_header Vary "Accept-Encoding";
    
    # ETag support
    etag on;
    
    # Last modified support
    if_modified_since exact;
}

# API response caching
location /api/ {
    proxy_cache API;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    proxy_cache_valid any 5m;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    proxy_cache_revalidate on;
    proxy_cache_background_update on;
    proxy_cache_bypass $bypass_cache;
    proxy_no_cache $bypass_cache;
    
    add_header X-Cache-Status $upstream_cache_status always;
    add_header X-Cache-Date $upstream_http_date;
}

# City page caching (longer cache for stable content)
location /texas/ {
    proxy_cache CITY;
    proxy_cache_valid 200 6h;
    proxy_cache_valid 404 5m;
    proxy_cache_use_stale error timeout invalid_header updating;
    proxy_cache_revalidate on;
    proxy_cache_background_update on;
    
    expires 6h;
    add_header Cache-Control "public, max-age=21600, s-maxage=21600";
    add_header X-Cache-Status $upstream_cache_status always;
}

# Faceted navigation caching
location /electricity-plans/ {
    proxy_cache STATIC;
    proxy_cache_valid 200 4h;
    proxy_cache_valid 404 10m;
    proxy_cache_use_stale error timeout invalid_header updating;
    proxy_cache_revalidate on;
    
    expires 4h;
    add_header Cache-Control "public, max-age=14400, s-maxage=14400";
    add_header X-Cache-Status $upstream_cache_status always;
}

# Microcache for dynamic content
location ~ ^/(compare|providers|rates)$ {
    proxy_cache MICRO;
    proxy_cache_valid 200 60s;
    proxy_cache_use_stale error timeout invalid_header updating;
    proxy_cache_bypass $bypass_cache;
    proxy_no_cache $bypass_cache;
    
    expires 60s;
    add_header Cache-Control "public, max-age=60, s-maxage=60";
    add_header X-Cache-Status $upstream_cache_status always;
}

# Sitemap caching
location ~* \.(xml)$ {
    expires 1d;
    add_header Cache-Control "public, max-age=86400";
    add_header Content-Type "application/xml";
    
    # Gzip compression for XML
    gzip on;
    gzip_types application/xml text/xml;
}

# Robots.txt caching
location = /robots.txt {
    expires 1d;
    add_header Cache-Control "public, max-age=86400";
    access_log off;
}

# Service Worker caching (no cache)
location = /sw.js {
    expires off;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
}

# Manifest caching
location = /manifest.json {
    expires 1d;
    add_header Cache-Control "public, max-age=86400";
}

# Cache purge endpoint (for admin use)
location ~ ^/purge(/.*) {
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    deny all;
    proxy_cache_purge STATIC "$scheme$request_method$host$1";
}